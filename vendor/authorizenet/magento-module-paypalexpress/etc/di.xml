<?xml version="1.0"?>

<config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="urn:magento:framework:ObjectManager/etc/config.xsd">

    <type name="AuthorizeNet\PayPalExpress\Gateway\Config\Config">
        <arguments>
            <argument name="methodCode" xsi:type="const">AuthorizeNet\PayPalExpress\Gateway\Config\Config::CODE</argument>
        </arguments>
    </type>

    <!-- Payment Method Facade configuration -->
    <virtualType name="AuthorizeNetPayPalExpressFacade" type="Magento\Payment\Model\Method\Adapter">
        <arguments>
            <argument name="code" xsi:type="const">AuthorizeNet\PayPalExpress\Gateway\Config\Config::CODE</argument>
            <argument name="formBlockType" xsi:type="string">AuthorizeNet\PayPalExpress\Block\Payment\Form</argument>
            <argument name="infoBlockType" xsi:type="string">AuthorizeNetPayPalExpressPaymentInfo</argument>
            <argument name="valueHandlerPool" xsi:type="object">AuthorizeNetPayPalExpressValueHandlerPool</argument>
            <argument name="commandPool" xsi:type="object">AuthorizeNetPayPalExpressCommandPool</argument>
            <argument name="logger" xsi:type="object">AuthorizeNet\Core\Model\Logger</argument>
        </arguments>
    </virtualType>

    <!-- Commands infrastructure -->
    <virtualType name="AuthorizeNetPayPalExpressCommandPool" type="Magento\Payment\Gateway\Command\CommandPool">
        <arguments>
            <argument name="commands" xsi:type="array">
                <item name="authorize" xsi:type="string">AuthorizeNetPayPalExpressAuthorizeCommand</item>
                <item name="sale" xsi:type="string">AuthorizeNetPayPalExpressSaleCommand</item>
                <item name="settle" xsi:type="string">AuthorizeNetPayPalExpressSettleCommand</item>
                <item name="capture" xsi:type="string">AuthorizeNetPayPalExpressCaptureStrategyCommand</item>
                <item name="refund" xsi:type="string">AuthorizeNetPayPalExpressRefundCommand</item>
                <item name="cancel" xsi:type="string">AuthorizeNetPayPalExpressVoidCommand</item>
                <item name="void" xsi:type="string">AuthorizeNetPayPalExpressVoidCommand</item>
                <item name="accept_payment" xsi:type="string">AuthorizeNetCoreApprovePaymentCommand</item>
                <item name="deny_payment" xsi:type="string">AuthorizeNetCoreDeclinePaymentCommand</item>
                <item name="fetch_transaction_information" xsi:type="string">AuthorizeNetCoreGetTransactionDetailsCommand</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Initialize command -->
    <type name="AuthorizeNet\PayPalExpress\Gateway\Command\InitializeCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">AuthorizeNetPayPalExpressInitializeRequestBuilder</argument>
            <argument name="responseValidator" xsi:type="object">AuthorizeNetPayPalExpressInitializeCommandValidator</argument>
            <argument name="transferFactory" xsi:type="object">AuthorizeNet\Core\Gateway\Http\TransferFactory</argument>
            <argument name="transactionClient" xsi:type="object">AuthorizeNetPayPalExpressTransactionClient</argument>
        </arguments>
    </type>
    <virtualType name="AuthorizeNetPayPalExpressInitializeRequestBuilder" type="AuthorizeNet\PayPalExpress\Gateway\Request\InitializeRequestBuilder">
        <arguments>
            <argument name="transactionType" xsi:type="const">AuthorizeNet\Core\Gateway\Http\Client\AbstractClient::TRANSACTION_AUTH_ONLY</argument>
            <argument name="config" xsi:type="object">AuthorizeNet\PayPalExpress\Gateway\Config\Config</argument>
        </arguments>
    </virtualType>
    <virtualType name="AuthorizeNetPayPalExpressInitializeCommandValidator" type="Magento\Payment\Gateway\Validator\ValidatorComposite">
        <arguments>
            <argument name="validators" xsi:type="array">
                <item name="responseCode" xsi:type="string">AuthorizeNet\Core\Gateway\Validator\ResultCodeValidator</item>
                <item name="transactionResponseCode" xsi:type="string">AuthorizeNetPayPalExpressInitializeTransactionResponseValidator</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="AuthorizeNetPayPalExpressInitializeTransactionResponseValidator" type="AuthorizeNet\Core\Gateway\Validator\TransactionResponseCodeValidator">
        <arguments>
            <argument name="validResponseCodes" xsi:type="array">
                <item name="approved" xsi:type="const">AuthorizeNet\Core\Gateway\Validator\TransactionResponseCodeValidator::TRANSACTION_CODE_APPROVED</item>
                <item name="invalid_amount" xsi:type="const">AuthorizeNet\Core\Gateway\Validator\TransactionResponseCodeValidator::TRANSACTION_CODE_INVALID_AMOUNT</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- GetDetails command -->
    <type name="AuthorizeNet\PayPalExpress\Gateway\Command\GetDetailsCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">AuthorizeNet\PayPalExpress\Gateway\Request\GetDetailsRequestBuilder</argument>
            <argument name="responseValidator" xsi:type="object">AuthorizeNetPayPalExpressInitializeCommandValidator</argument>
            <argument name="transferFactory" xsi:type="object">AuthorizeNet\Core\Gateway\Http\TransferFactory</argument>
            <argument name="transactionClient" xsi:type="object">AuthorizeNetPayPalExpressTransactionClient</argument>
        </arguments>
    </type>

    <!-- Authorize command -->
    <virtualType name="AuthorizeNetPayPalExpressAuthorizeCommand" type="AuthorizeNetCoreGatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">AuthorizeNetPayPalExpressAuthorizeRequestBuilder</argument>
            <argument name="handler" xsi:type="object">AuthorizeNetPayPalExpressAuthorizeResponseHandler</argument>
            <argument name="transferFactory" xsi:type="object">AuthorizeNet\Core\Gateway\Http\TransferFactory</argument>
            <argument name="validator" xsi:type="object">AuthorizeNetPayPalExpressAuthorizeCommandValidator</argument>
            <argument name="client" xsi:type="object">AuthorizeNetPayPalExpressTransactionClient</argument>
        </arguments>
    </virtualType>
    <virtualType name="AuthorizeNetPayPalExpressAuthorizeResponseHandler" type="Magento\Payment\Gateway\Response\HandlerChain">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="raw_data" xsi:type="string">\AuthorizeNet\Core\Gateway\Response\RawDataHandler</item>
                <item name="held" xsi:type="string">AuthorizeNet\Core\Gateway\Response\HeldHandler</item>
                <item name="transactionId" xsi:type="string">AuthorizeNet\Core\Gateway\Response\TransactionIdHandler</item>    
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="AuthorizeNetPayPalExpressAuthorizeRequestBuilder" type="AuthorizeNet\PayPalExpress\Gateway\Request\TransactionRequestBuilder">
        <arguments>
            <argument name="transactionType" xsi:type="const">AuthorizeNet\Core\Gateway\Http\Client\AbstractClient::TRANSACTION_AUTH_ONLY_CONTINUE</argument>
        </arguments>
    </virtualType>
    <virtualType name="AuthorizeNetPayPalExpressAuthorizeCommandValidator" type="Magento\Payment\Gateway\Validator\ValidatorComposite">
        <arguments>
            <argument name="validators" xsi:type="array">
                <item name="responseCode" xsi:type="string">AuthorizeNet\Core\Gateway\Validator\ResultCodeValidator</item>
                <item name="transactionResponseCode" xsi:type="string">AuthorizeNetPayPalExpressAuthorizeTransactionResponseValidator</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="AuthorizeNetPayPalExpressAuthorizeTransactionResponseValidator" type="AuthorizeNet\Core\Gateway\Validator\TransactionResponseCodeValidator">
        <arguments>
            <argument name="validResponseCodes" xsi:type="array">
                <item name="held" xsi:type="const">AuthorizeNet\Core\Gateway\Validator\TransactionResponseCodeValidator::TRANSACTION_CODE_HELD</item>
                <item name="approved" xsi:type="const">AuthorizeNet\Core\Gateway\Validator\TransactionResponseCodeValidator::TRANSACTION_CODE_APPROVED</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Sale command -->
    <virtualType name="AuthorizeNetPayPalExpressSaleCommand" type="AuthorizeNetPayPalExpressAuthorizeCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">AuthorizeNetPayPalExpressSaleRequestBuilder</argument>
        </arguments>
    </virtualType>
    <virtualType name="AuthorizeNetPayPalExpressSaleRequestBuilder" type="AuthorizeNetPayPalExpressAuthorizeRequestBuilder">
        <arguments>
            <argument name="transactionType" xsi:type="const">AuthorizeNet\Core\Gateway\Http\Client\AbstractClient::TRANSACTION_AUTH_CAPTURE_CONTINUE</argument>
        </arguments>
    </virtualType>

    <!-- Settle command -->
    <virtualType name="AuthorizeNetPayPalExpressSettleCommand" type="AuthorizeNetCoreGatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">AuthorizeNetPayPalExpressSettleRequestBuilder</argument>
            <argument name="handler" xsi:type="object">AuthorizeNetCoreTransactionIdSettleHandler</argument>
            <argument name="transferFactory" xsi:type="object">AuthorizeNet\Core\Gateway\Http\TransferFactory</argument>
            <argument name="validator" xsi:type="object">AuthorizeNetPayPalExpressSettleCommandValidator</argument>
            <argument name="client" xsi:type="object">AuthorizeNetPayPalExpressTransactionClient</argument>
        </arguments>
    </virtualType>
    <virtualType name="AuthorizeNetPayPalExpressSettleRequestBuilder" type="AuthorizeNet\Core\Gateway\Request\SettleRequestBuilder">
        <arguments>
            <argument name="transactionType" xsi:type="const">AuthorizeNet\Core\Gateway\Http\Client\AbstractClient::TRANSACTION_PRIOR_AUTH_CAPTURE</argument>
        </arguments>
    </virtualType>
    <virtualType name="AuthorizeNetPayPalExpressSettleCommandValidator" type="Magento\Payment\Gateway\Validator\ValidatorComposite">
        <arguments>
            <argument name="validators" xsi:type="array">
                <item name="responseCode" xsi:type="string">AuthorizeNet\Core\Gateway\Validator\ResultCodeValidator</item>
                <item name="transactionResponseCode" xsi:type="string">AuthorizeNetPayPalExpressSettleTransactionResponseValidator</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="AuthorizeNetPayPalExpressSettleTransactionResponseValidator" type="AuthorizeNet\Core\Gateway\Validator\TransactionResponseCodeValidator">
        <arguments>
            <argument name="validResponseCodes" xsi:type="array">
                <item name="approved" xsi:type="const">AuthorizeNet\Core\Gateway\Validator\TransactionResponseCodeValidator::TRANSACTION_CODE_APPROVED</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Refund command -->
    <virtualType name="AuthorizeNetPayPalExpressRefundCommand" type="AuthorizeNetPayPalExpressSettleCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">AuthorizeNetPayPalExpressRefundRequestBuilder</argument>
            <argument name="handler" xsi:type="object">AuthorizeNet\Core\Gateway\Response\RefundHandler</argument>
        </arguments>
    </virtualType>
    <virtualType name="AuthorizeNetPayPalExpressRefundRequestBuilder" type="AuthorizeNetPayPalExpressSettleRequestBuilder">
        <arguments>
            <argument name="transactionType" xsi:type="const">AuthorizeNet\Core\Gateway\Http\Client\AbstractClient::TRANSACTION_REFUND</argument>
        </arguments>
    </virtualType>

    <!-- Void command -->
    <virtualType name="AuthorizeNetPayPalExpressVoidCommand" type="AuthorizeNetPayPalExpressRefundCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">AuthorizeNetPayPalExpressVoidRequestBuilder</argument>
            <argument name="handler" xsi:type="object">AuthorizeNetCoreTransactionIdVoidHandler</argument>
        </arguments>
    </virtualType>
    <virtualType name="AuthorizeNetPayPalExpressVoidRequestBuilder" type="AuthorizeNetPayPalExpressRefundRequestBuilder">
        <arguments>
            <argument name="transactionType" xsi:type="const">AuthorizeNet\Core\Gateway\Http\Client\AbstractClient::TRANSACTION_VOID</argument>
        </arguments>
    </virtualType>

    <!-- Capture command -->
    <virtualType name="AuthorizeNetPayPalExpressCaptureStrategyCommand" type="AuthorizeNet\Core\Gateway\Command\CaptureStrategyCommand">
        <arguments>
            <argument name="commandPool" xsi:type="object">AuthorizeNetPayPalExpressCommandPool</argument>
        </arguments>
    </virtualType>

    <!-- Injecting config model -->
    <virtualType name="AuthorizeNetPayPalExpressTransactionClient" type="AuthorizeNet\Core\Gateway\Http\Client\TransactionClient">
        <arguments>
            <argument name="config" xsi:type="object">AuthorizeNet\PayPalExpress\Gateway\Config\Config</argument>
        </arguments>
    </virtualType>

    <!-- Payment info block -->
    <virtualType name="AuthorizeNetPayPalExpressPaymentInfo" type="AuthorizeNet\Core\Block\Payment\Info">
        <arguments>
            <argument name="config" xsi:type="object">AuthorizeNet\PayPalExpress\Gateway\Config\Config</argument>
        </arguments>
    </virtualType>

    <!-- Value handlers infrastructure -->
    <virtualType name="AuthorizeNetPayPalExpressValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">AuthorizeNetPayPalExpressConfigValueHandler</item>
                <item name="login_id" xsi:type="string">AuthorizeNetCoreBaseConfigValueHandler</item>
                <item name="trans_key" xsi:type="string">AuthorizeNetCoreBaseConfigValueHandler</item>
                <item name="client_key" xsi:type="string">AuthorizeNetCoreBaseConfigValueHandler</item>
                <item name="signature_key" xsi:type="string">AuthorizeNetCoreBaseConfigValueHandler</item>
                <item name="can_void" xsi:type="string">AuthorizeNet\Core\Gateway\Config\CanVoidHandler</item>
                <item name="can_cancel" xsi:type="string">AuthorizeNet\Core\Gateway\Config\CanVoidHandler</item>
                <item name="solution_id" xsi:type="string">AuthorizeNet\Core\Gateway\Config\SolutionIdHandler</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="AuthorizeNetPayPalExpressConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">AuthorizeNet\PayPalExpress\Gateway\Config\Config</argument>
        </arguments>
    </virtualType>

    <virtualType name="AuthorizeNetPayPalExpressObserverAddCheckoutShortcuts" type="AuthorizeNet\Core\Observer\AddShortcuts">
        <arguments>
            <argument name="gatewayConfig" xsi:type="object">AuthorizeNet\PayPalExpress\Gateway\Config\Config</argument>
            <argument name="blockClass" xsi:type="string">AuthorizeNet\PayPalExpress\Block\Button</argument>
        </arguments>
    </virtualType>

    <type name="AuthorizeNet\Core\Model\Merchant\Configurator">
        <plugin name="anet-paypal-configurator-plugin" type="AuthorizeNet\PayPalExpress\Plugin\ConfiguratorPlugin"/>
    </type>
</config>
